name,pattern,field_map,slack_format,note,exclude_fields,email_address,email_theme,strip_pattern,truncate_pattern
xcore_log,"(?P<ts>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3})\s+\[(?P<lvl>[A-Z]+)\s*\]\s+(?P<comp>[^:]+):\s*(?P<rest>.*?)(?=(\d{4}-\d{2}-\d{2} \d{2}|\Z))","{""stat"": ""(lambda text, re=__import__('re'): (m.group(1) if (m := re.match(r'([A-Z0-9_\\-]+=?)(?:[:\\s]|$)', text)) else ''))(rest.strip())"", ""rest"": ""comp.strip() + ': ' + rest if comp.strip() else rest""}","*CATEGORY:* XCORE\n*TIMESTAMP:* {ts}\n*LEVEL:* {lvl}\n*STATUS:* {stat}\n*EVENT_TEXT:*\n```\n{rest}\n```",,,,,"this\s*alert\s*has\s*been\s*automatically\s*generated[\s\S]*","\d{4}-\d{2}-\d{2} \d{2}"
tpt_hub_alert,"(?isx)(?:^|\r?\n)\s*(?:(?P<status>Active\ alerts|Resolved)\s*:?)?\s*message:\s*(?P<msg>.*?)(?=\r?\n\s*alertname:)\r?\n\s*alertname:\s*(?P<alertname>[^\r\n]*)\r?\n\s*consumer:\s*(?P<consumer>[^\r\n]*)\r?\n\s*grafana_folder:\s*(?P<grafana_folder>[^\r\n]*)\r?\n\s*instance:\s*(?P<instance>[^\r\n]*)(?:.*?)(?=\r?\n\s*priority:)\r?\n\s*priority:\s*(?P<priority>[^\r\n]+)(?:.*?)(?=\r?\n\s*(?:message:|Active\ alerts|Resolved)|\Z)","{""lvl"": ""(priority or '').strip().upper() + ' PRIORITY' if priority else ''"",""stat"": ""'ACTIVE ALERT' if ((status or status_hint or '').strip().lower().startswith('active')) else 'RESOLVED' if (status or status_hint) else 'STATUS UNKNOWN'"",""rest"": ""'\\n'.join([p for p in [msg.strip(), ('consumer: ' + consumer.strip()) if consumer.strip() else '', ('grafana_folder: ' + grafana_folder.strip()) if grafana_folder.strip() else '', ('instance: ' + instance.strip()) if instance.strip() else ''] if p])"",""ts"": ""email_ts""}","*CATEGORY:* TPT-HUB\n*TIMESTAMP:* {ts}\n*LEVEL:* {lvl}\n*STATUS:* {stat}\n*EVENT_TEXT:*\n```\n{rest}\n```",,,,"(?i)TPT\s*Grafana","(?is)(?:Sent by Grafana|To unsubscribe)[\\s\\S]*$",""
