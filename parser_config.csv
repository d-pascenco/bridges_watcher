name,pattern,field_map,slack_format,note,exclude_fields,email_address,email_theme,strip_pattern,truncate_pattern
xcore_log,"(?P<ts>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3})\s+\[(?P<lvl>[A-Z]+)\s*\]\s+(?P<comp>[^:]+):\s*(?P<rest>.*?)(?=(\d{4}-\d{2}-\d{2} \d{2}|\Z))","{""stat"": ""rest.split(':')[1].strip() if ':' in rest else ''""}","*CATEGORY:* XCORE\n*TIMESTAMP:* {ts}\n*LEVEL:* {lvl}\n*STATUS:* {stat}\n*EVENT_TEXT:*\n```\n{rest}\n```",,,,,"this\s*alert\s*has\s*been\s*automatically\s*generated[\s\S]*","\d{4}-\d{2}-\d{2} \d{2}"
tpt_hub_alert,"(?s)(?=.*?(?P<status>Active alerts|Resolved))\s*message:\s*(?P<msg>.*?)(?=\nalertname:)[\s\S]*?alertname:\s*(?P<alertname>[^\n]*)\nconsumer:\s*(?P<consumer>[^\n]*)\ngrafana_folder:\s*(?P<grafana_folder>[^\n]*)\ninstance:\s*(?P<instance>[^\n]*)[\s\S]*?priority:\s*(?P<priority>\w+)","{""lvl"": ""f'{priority.upper()} PRIORITY'"",""stat"": ""'ACTIVE ALERT' if status.lower().startswith('active') else 'RESOLVED'"",""rest"": ""(msg.strip() + ' ' + '\\nconsumer: ' + consumer.strip() + '\\ngrafana_folder: ' + grafana_folder.strip() + '\\ninstance: ' + instance.strip())"",""ts"": ""''""}","*CATEGORY:* TPT-HUB\n*TIMESTAMP:* {ts}\n*LEVEL:* {lvl}\n*STATUS:* {stat}\n*EVENT_TEXT:*\n```\n{rest}\n```",,,, (?i)^\[Alert\]\s*TPT Grafana,"---[\s\S]*$",


